All done! ‚ú® üç∞ ‚ú®
26 files left unchanged.
Success: no issues found in 26 source files
<string>:2:16-27: info: atom does not occur in any rule head:
  u_minority(X)

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

.<string>:1:13-14: info: atom does not occur in any rule head:
  u_b

<string>:1:13-14: info: atom does not occur in any rule head:
  u_b

................<string>:2:16-27: info: atom does not occur in any rule head:
  u_minority(X)

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

<string>:3:17-28: info: atom does not occur in any rule head:
  (-u_fairGPA(X))

<string>:3:30-41: info: atom does not occur in any rule head:
  (-u_highGPA(X))

.<string>:1:13-14: info: atom does not occur in any rule head:
  u_b

............................................F...............................................
======================================================================
FAIL: test_epistemic_atom_with_both_negations (tests.test_reification.Test)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/lutelillo/Desktop/lute_eclingo/eclingo/tests/test_reification.py", line 102, in test_epistemic_atom_with_both_negations
    self.assert_equal_program(
  File "/Users/lutelillo/Desktop/lute_eclingo/eclingo/tests/test_reification.py", line 51, in assert_equal_program
    self.assertListEqual(sorted(program), sorted(expected_program))
AssertionError: Lists differ: ['#false :- k(not1(u(-a))).', '#program base.', 'not1(u(-a)) :- not u(-a).', '{ k(not1(u(-a))) } :- not1(u(-a)).'] != ['#false :- k(not1(u(-b))).', '#program base.', 'not1(u(-a)) :- not u(-a).', '{ k(not1(u(-a))) } :- not1(u(-a)).']

First differing element 0:
'#false :- k(not1(u(-a))).'
'#false :- k(not1(u(-b))).'

- ['#false :- k(not1(u(-a))).',
?                       ^

+ ['#false :- k(not1(u(-b))).',
?                       ^

   '#program base.',
   'not1(u(-a)) :- not u(-a).',
   '{ k(not1(u(-a))) } :- not1(u(-a)).']

----------------------------------------------------------------------
Ran 110 tests in 11.294s

FAILED (failures=1)
{a}. b :- &k{a}.
{a}.
{-a}. b :- &k{ not -a}.
b :- &k{ not -a}.
{-a}. b:- &k{ not not -a}.
{a}. b :- &k{ not a}.
b :- &k{ not a}.
{a}. b :- &k{ not not a}.
{-a}. b :- &k{-a}.
{a}. b :- &k{- -a}.
{a(1..2)}. b :- &k{a(V0)}.
{-a(1..2)}. b :- &k{-a(V0)}.
{a(1)}. b :- &k{- -a(V0)}.
{a(1)}. dom(1). b :- &k{ not a(V0)}, dom(V0).
{a(1)}. dom(1). b :- &k{ not not a(V0)}, dom(V0).
{a(1..2)}. {b(1)}. c :- not &k{a(V0)}, &k{b(V0)}.
a. b. #show a/0.
a. b. #show a/0. #show b/0.
-a. b. #show -a/0.

ast.Rule(location=Location(begin=Position(filename='<string>',
                                          line=1,
                                          column=1),
                           end=Position(filename='<string>', line=1, column=19)),
         head=ast.Literal(location=Location(begin=Position(filename='<string>',
                                                           line=1,
                                                           column=1),
                                            end=Position(filename='<string>',
                                                         line=1,
                                                         column=19)),
                          sign=0,
                          atom=ast.BooleanConstant(0)),
         body=[ast.Literal(location=Location(begin=Position(filename='<string>',
                                                            line=1,
                                                            column=4),
                                             end=Position(filename='<string>',
                                                          line=1,
                                                          column=18)),
                           sign=0,
                           atom=ast.SymbolicAtom(symbol=ast.Function(location=Location(begin=Position(filename='<string>',
                                                                                                      line=1,
                                                                                                      column=4),
                                                                                       end=Position(filename='<string>',
                                                                                                    line=1,
                                                                                                    column=18)),
                                                                     name='k',
                                                                     arguments=[ast.Function(location=Location(begin=Position(filename='<string>',
                                                                                                                              line=1,
                                                                                                                              column=6),
                                                                                                               end=Position(filename='<string>',
                                                                                                                            line=1,
                                                                                                                            column=17)),
                                                                                             name='not1',
                                                                                             arguments=[ast.Function(location=Location(begin=Position(filename='<string>',
                                                                                                                                                      line=1,
                                                                                                                                                      column=11),
                                                                                                                                       end=Position(filename='<string>',
                                                                                                                                                    line=1,
                                                                                                                                                    column=16)),
                                                                                                                     name='u',
                                                                                                                     arguments=[ast.UnaryOperation(location=Location(begin=Position(filename='<string>',
                                                                                                                                                                                    line=1,
                                                                                                                                                                                    column=13),
                                                                                                                                                                     end=Position(filename='<string>',
                                                                                                                                                                                  line=1,
                                                                                                                                                                                  column=15)),
                                                                                                                                                   operator_type=0,
                                                                                                                                                   argument=ast.SymbolicTerm(location=Location(begin=Position(filename='<string>',
                                                                                                                                                                                                              line=1,
                                                                                                                                                                                                              column=14),
                                                                                                                                                                                               end=Position(filename='<string>',
                                                                                                                                                                                                            line=1,
                                                                                                                                                                                                            column=15)),
                                                                                                                                                                             symbol=Function('a',
                                                                                                                                                                                             [],
                                                                                                                                                                                             True)))],
                                                                                                                     external=0)],
                                                                                             external=0)],
                                                                     external=0)))])


--------------------------------------------------------------------
Your code has been rated at 10.00/10 (previous run: 10.00/10, +0.00)

